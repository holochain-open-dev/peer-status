{"version":3,"file":"peer-status-stories.d6337b15.iframe.bundle.js","mappings":";;AAkBA;;;AAGA;;;AAOA;;;;ACjBA;ACyBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApBA","sources":["webpack://@holochain-open-dev/peer-status-dev/./stories/peer-status.stories.js","webpack://@holochain-open-dev/peer-status-dev/../../src/elements/peer-status-context.ts","webpack://@holochain-open-dev/peer-status-dev/../../src/elements/peer-status.ts"],"sourcesContent":["import { html } from \"lit-html\";\nimport { ProfilesZomeMock, demoProfiles } from \"@holochain-open-dev/profiles/mocks\";\nimport { PeerStatusZomeMock } from \"@holochain-open-dev/peer-status/mocks\";\nimport { ProfilesStore, ProfilesClient } from \"@holochain-open-dev/profiles\";\nimport { PeerStatusStore, PeerStatusClient } from \"@holochain-open-dev/peer-status\";\nimport \"@holochain-open-dev/profiles/elements/profiles-context.js\";\nimport \"@holochain-open-dev/peer-status/elements/peer-status-context.js\";\nimport \"@holochain-open-dev/peer-status/elements/peer-status.js\";\nconst profiles = demoProfiles();\nconst profilesStore = new ProfilesStore(new ProfilesClient(new ProfilesZomeMock(profiles)));\n\n// More on how to set up stories at: https://storybook.js.org/docs/7.0/web-components/writing-stories/introduction\nexport default {\n  title: \"Frontend/Elements/peer-status\",\n  tags: [\"autodocs\"],\n  component: \"peer-status\",\n  render: args => html` <profiles-context .store=${profilesStore}>\n      <peer-status-context\n        .store=${new PeerStatusStore(new PeerStatusClient(new PeerStatusZomeMock()))}\n      >\n        <peer-status\n          .agentPubKey=${Array.from(profiles.keys())[0]}\n        ></peer-status>\n      </peer-status-context>\n    </profiles-context>`\n};\n\n// More on writing stories with args: https://storybook.js.org/docs/7.0/web-components/writing-stories/args\nexport const Demo = {};\nDemo.parameters = {\n  ...Demo.parameters,\n  docs: {\n    ...Demo.parameters?.docs,\n    source: {\n      originalSource: \"{}\",\n      ...Demo.parameters?.docs?.source\n    }\n  }\n};","import { css, html, LitElement } from \"lit\";\nimport { provide } from \"@lit-labs/context\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { peerStatusStoreContext } from \"../context.js\";\nimport { PeerStatusStore } from \"../peer-status-store.js\";\n\n@customElement(\"peer-status-context\")\nexport class PeerStatusContext extends LitElement {\n  @provide({ context: peerStatusStoreContext })\n  @property({ type: Object })\n  store!: PeerStatusStore;\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  static styles = css`\n    :host {\n      display: contents;\n    }\n  `;\n}\n","import { consume } from \"@lit-labs/context\";\nimport { StoreSubscriber } from \"@holochain-open-dev/stores\";\nimport { AgentPubKey } from \"@holochain/client\";\nimport { css, html, LitElement } from \"lit\";\nimport { hashProperty, sharedStyles } from \"@holochain-open-dev/elements\";\nimport { customElement, property } from \"lit/decorators.js\";\n\nimport { peerStatusStoreContext } from \"../context.js\";\nimport { PeerStatusStore } from \"../peer-status-store.js\";\n\n@customElement(\"peer-status\")\nexport class PeerStatus extends LitElement {\n  /** Public properties */\n\n  /**\n   * REQUIRED. The public key identifying the agent whose presence is going to be shown.\n   */\n  @property(hashProperty(\"agent-pub-key\"))\n  agentPubKey!: AgentPubKey;\n\n  /**\n   * @internal\n   */\n  @consume({ context: peerStatusStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: PeerStatusStore;\n\n  /**\n   * @internal\n   */\n  _status = new StoreSubscriber(this, () =>\n    this.store.agentsStatus.get(this.agentPubKey)\n  );\n\n  render() {\n    return html`<div class=\"outer\">\n      <div class=${this._status.value}></div>\n    </div>`;\n  }\n\n  static styles = [\n    sharedStyles,\n    css`\n      .outer {\n        position: relative;\n        height: 15px;\n        width: 15px;\n        background-color: #666666;\n      }\n\n      .outer,\n      .online,\n      .idle,\n      .offline {\n        border-radius: 50%;\n      }\n\n      .online,\n      .idle {\n        top: 2px;\n        left: 2px;\n        position: absolute;\n        height: 11px;\n        width: 11px;\n      }\n\n      .online {\n        background-color: #00ef00;\n      }\n\n      .idle {\n        background-color: #df8600;\n      }\n\n      .offline {\n        top: 2px;\n        left: 2px;\n        position: relative;\n        height: 5px;\n        width: 5px;\n        background-color: #666666;\n        border: 3px solid #a7a7a7;\n      }\n    `,\n  ];\n}\n"],"names":[],"sourceRoot":""}