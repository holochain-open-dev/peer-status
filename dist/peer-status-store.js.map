{"version":3,"file":"peer-status-store.js","sourceRoot":"","sources":["../src/peer-status-store.ts"],"names":[],"mappings":"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","sourcesContent":["import { CellClient } from '@holochain-open-dev/cell-client';\nimport { AgentPubKeyB64, serializeHash } from '@holochain-open-dev/core-types';\nimport merge from 'lodash-es/merge';\n\nimport { PeerStatusService } from './peer-status-service';\nimport { derived, Readable, readable } from 'svelte/store';\nimport { defaultConfig, PeerStatusConfig } from './config';\n\n/**\n * {\n *  \"AGENT_PUBKEY1\": writable(11223544354), // The last time that AGENT_PUBKEY1 ponged us\n *  \"AGENT_PUBKEY2\": writable(11222345654),\n * }\n */\n\nexport enum Status {\n  Online = 'online',\n  Idle = 'idle',\n  Offline = 'offline',\n}\n\nfunction lastSeenToStatus(now: number, lastSeen: number | undefined): Status {\n  if (lastSeen === undefined) return Status.Offline;\n\n  if (now - lastSeen < 5000) return Status.Online;\n  if (now - lastSeen < 20000) return Status.Idle;\n  return Status.Offline;\n}\n\nexport class PeerStatusStore {\n  /** Private */\n  private _service: PeerStatusService;\n  private _statusStore: Record<AgentPubKeyB64, Readable<number | undefined>> =\n    {};\n\n  /** Static info */\n  public myAgentPubKey: AgentPubKeyB64;\n\n  /** Readable stores */\n\n  config: PeerStatusConfig;\n\n  intervalStore = readable(Date.now(), set => {\n    setInterval(() => set(Date.now()), 1000);\n  });\n\n  constructor(\n    protected cellClient: CellClient,\n    config: Partial<PeerStatusConfig> = {}\n  ) {\n    this.config = merge(defaultConfig, config);\n    this._service = new PeerStatusService(cellClient, this.config.zomeName);\n    this.myAgentPubKey = serializeHash(cellClient.cellId[1]);\n\n    setInterval(() => this.ping(), 2000);\n    this.ping();\n  }\n\n  private ping() {\n    const agentsWeAreSeeing = Object.keys(this._statusStore);\n    if (agentsWeAreSeeing.length > 0) {\n      this._service.ping(agentsWeAreSeeing);\n    }\n  }\n\n  /** Actions */\n\n  subscribeToAgentStatus(agentPubKey: AgentPubKeyB64): Readable<Status> {\n    if (!this._statusStore[agentPubKey]) {\n      this._statusStore[agentPubKey] = readable<undefined | number>(\n        undefined,\n        set => {\n          const { unsubscribe } = this.cellClient.addSignalHandler(signal => {\n            const signalPayload = signal.data.payload;\n\n            if (\n              signalPayload.type === 'Pong' &&\n              signalPayload.from_agent === agentPubKey\n            ) {\n              set(Date.now());\n            }\n          });\n          return () => {\n            delete this._statusStore[agentPubKey];\n            unsubscribe();\n          };\n        }\n      );\n    }\n    this.ping();\n\n    return derived(\n      [this.intervalStore, this._statusStore[agentPubKey]],\n      ([now, lastSeenTimestamp]) => lastSeenToStatus(now, lastSeenTimestamp)\n    );\n  }\n}\n"]}