{"version":3,"file":"mocks.js","sourceRoot":"","sources":["../src/mocks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,iCAAiC,CAAC;AAC7D,OAAO,EAEL,eAAe,EACf,aAAa,GACd,MAAM,gCAAgC,CAAC;AAGxC,MAAM,KAAK,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAE9E,MAAM,OAAO,cAAe,SAAQ,UAAU;IAC5C,YACY,SAAqB,EAAE,EACvB,UAAkB,GAAG;QAE/B,KAAK,CAAC,IAAW,EAAE,IAAW,CAAC,CAAC;QAHtB,WAAM,GAAN,MAAM,CAAiB;QACvB,YAAO,GAAP,OAAO,CAAc;IAGjC,CAAC;IAED,IAAI,MAAM;QACR,OAAO;YACL,eAAe,CAAC,kDAAkD,CAAC;YACnE,eAAe,CAAC,kDAAkD,CAAC;SACpE,CAAC;IACJ,CAAC;IAED,IAAI,WAAW;QACb,OAAO,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,QAAQ,CACZ,QAAgB,EAChB,MAAc,EACd,OAAY,EACZ,OAAgB;QAEhB,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAQ,IAAY,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IACD,gBAAgB,CAAC,aAA0B;QACzC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import { CellClient } from '@holochain-open-dev/cell-client';\nimport {\n  AgentPubKeyB64,\n  deserializeHash,\n  serializeHash,\n} from '@holochain-open-dev/core-types';\nimport { CellId, AppSignalCb } from '@holochain/client';\n\nconst sleep = (ms: number) => new Promise(r => setTimeout(() => r(null), ms));\n\nexport class StatusZomeMock extends CellClient {\n  constructor(\n    protected agents: Array<any> = [],\n    protected latency: number = 500\n  ) {\n    super(null as any, null as any);\n  }\n\n  get cellId(): CellId {\n    return [\n      deserializeHash('uhC0kkSpFl08_2D0Pvw2vEVEkfSgDVZCkyOf1je6qIdClO1o'),\n      deserializeHash('uhCAk6oBoqygFqkDreZ0V0bH4R9cTN1OkcEG78OLxVptLWOI'),\n    ];\n  }\n\n  get myPubKeyB64() {\n    return serializeHash(this.cellId[1]);\n  }\n\n  async callZome(\n    zomeName: string,\n    fnName: string,\n    payload: any,\n    timeout?: number\n  ): Promise<any> {\n    await sleep(this.latency);\n    return (this as any)[fnName](payload);\n  }\n  addSignalHandler(signalHandler: AppSignalCb): { unsubscribe: () => void } {\n    throw new Error('Method not implemented.');\n  }\n}\n"]}