{"version":3,"file":"peer-status.js","sourceRoot":"","sources":["../../src/elements/peer-status.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0BAA0B,CAAC;AAC/D,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AACpD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAE5C,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,sBAAsB,EAAE,MAAM,YAAY,CAAC;AAEpD,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,MAAM,OAAO,UAAW,SAAQ,mBAAmB,CAAC,UAAU,CAAC;IAA/D;QACE,wBAAwB;;QAqBhB,YAAO,GAAG,IAAI,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE,CAC/C,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CACpD,CAAC;IAoCJ,CAAC;IAlCC,MAAM;QACJ,OAAO,IAAI,CAAA,cAAc,IAAI,CAAC,OAAO,CAAC,KAAK,SAAS,CAAC;IACvD,CAAC;;AAEM,iBAAM,GAAG;IACd,YAAY;IACZ,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;KA0BF;CACF,CAAC;AAjDF;IAJC,QAAQ,CAAC;QACR,SAAS,EAAE,eAAe;QAC1B,IAAI,EAAE,MAAM;KACb,CAAC;+CAC2B;AAU7B;IAFC,eAAe,CAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACrE,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCACH","sourcesContent":["import { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\nimport { contextProvided } from '@lit-labs/context';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { StoreSubscriber } from 'lit-svelte-stores';\nimport { css, html, LitElement } from 'lit';\n\nimport { property } from 'lit/decorators.js';\nimport { peerStatusStoreContext } from '../context';\nimport { PeerStatusStore } from '../peer-status-store';\nimport { sharedStyles } from './utils/shared-styles';\n\nexport class PeerStatus extends ScopedElementsMixin(LitElement) {\n  /** Public properties */\n\n  /**\n   * REQUIRED. The public key identifying the agent whose presence is going to be shown.\n   */\n  @property({\n    attribute: 'agent-pub-key',\n    type: String,\n  })\n  agentPubKey!: AgentPubKeyB64;\n\n  /** Dependencies */\n\n  /**\n   * `PeerStatusStore` that is requested via context.\n   * Only set this property if you want to override the store requested via context.\n   */\n  @contextProvided({ context: peerStatusStoreContext, subscribe: true })\n  @property({ type: Object })\n  store!: PeerStatusStore;\n\n  private _status = new StoreSubscriber(this, () =>\n    this.store.subscribeToAgentStatus(this.agentPubKey)\n  );\n\n  render() {\n    return html`<div class=${this._status.value}></div>`;\n  }\n\n  static styles = [\n    sharedStyles,\n    css`\n      .online,\n      .idle,\n      .offline {\n        border-radius: 50%;\n      }\n\n      .online,\n      .idle {\n        height: 16px;\n        width: 16px;\n      }\n\n      .online {\n        background-color: #00ef00;\n      }\n\n      .idle {\n        background-color: #dfc800;\n      }\n\n      .offline {\n        height: 6px;\n        width: 6px;\n        border: 5px solid #7c7c7c;\n      }\n    `,\n  ];\n}\n"]}