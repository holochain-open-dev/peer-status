{"version":3,"file":"image.js","sourceRoot":"","sources":["../../../src/elements/utils/image.ts"],"names":[],"mappings":"AAAA,iEAAiE;AACjE,MAAM,UAAU,eAAe,CAAC,GAAqB;IACnD,MAAM,SAAS,GAAG,GAAG,CAAC;IACtB,MAAM,UAAU,GAAG,GAAG,CAAC;IAEvB,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IACtB,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IAExB,4BAA4B;IAC5B,IAAI,KAAK,GAAG,MAAM,EAAE;QAClB,IAAI,KAAK,GAAG,SAAS,EAAE;YACrB,MAAM,GAAG,MAAM,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;YACtC,KAAK,GAAG,SAAS,CAAC;SACnB;KACF;SAAM;QACL,IAAI,MAAM,GAAG,UAAU,EAAE;YACvB,KAAK,GAAG,KAAK,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC;YACtC,MAAM,GAAG,UAAU,CAAC;SACrB;KACF;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAA6B,CAAC;IAChE,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAExC,2CAA2C;IAC3C,OAAO,MAAM,CAAC,SAAS,EAAE,CAAC;AAC5B,CAAC","sourcesContent":["// Crop the image and return a base64 bytes string of its content\nexport function resizeAndExport(img: HTMLImageElement) {\n  const MAX_WIDTH = 300;\n  const MAX_HEIGHT = 300;\n\n  let width = img.width;\n  let height = img.height;\n\n  // Change the resizing logic\n  if (width > height) {\n    if (width > MAX_WIDTH) {\n      height = height * (MAX_WIDTH / width);\n      width = MAX_WIDTH;\n    }\n  } else {\n    if (height > MAX_HEIGHT) {\n      width = width * (MAX_HEIGHT / height);\n      height = MAX_HEIGHT;\n    }\n  }\n\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  ctx.drawImage(img, 0, 0, width, height);\n\n  // return the .toDataURL of the temp canvas\n  return canvas.toDataURL();\n}\n"]}