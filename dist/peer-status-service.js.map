{"version":3,"file":"peer-status-service.js","sourceRoot":"","sources":["../src/peer-status-service.ts"],"names":[],"mappings":"AAGA,MAAM,OAAO,iBAAiB;IAC5B,YAAmB,UAAsB,EAAS,WAAW,QAAQ;QAAlD,eAAU,GAAV,UAAU,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAW;IAAG,CAAC;IAEzE;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,YAA8B;QACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;IAEO,QAAQ,CAAC,OAAe,EAAE,OAAY;QAC5C,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;CACF","sourcesContent":["import { CellClient } from '@holochain-open-dev/cell-client';\nimport { AgentPubKeyB64 } from '@holochain-open-dev/core-types';\n\nexport class PeerStatusService {\n  constructor(public cellClient: CellClient, public zomeName = 'status') {}\n\n  /**\n   * Ping all given agents, waiting for their pong\n   */\n  async ping(agentPubKeys: AgentPubKeyB64[]): Promise<void> {\n    return this.callZome('ping', agentPubKeys);\n  }\n\n  private callZome(fn_name: string, payload: any) {\n    return this.cellClient.callZome(this.zomeName, fn_name, payload);\n  }\n}\n"]}