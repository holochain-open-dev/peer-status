{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/config.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultConfig",
          "type": {
            "text": "PeerStatusConfig"
          },
          "default": "{\n  pingIntervalMs: 2000,\n  onlineThresholdMs: 5000,\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultConfig",
          "declaration": {
            "name": "defaultConfig",
            "module": "src/config.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "peerStatusStoreContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "peerStatusStoreContext",
          "declaration": {
            "name": "peerStatusStoreContext",
            "module": "src/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./context.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./peer-status-client.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./peer-status-store.js\""
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "\"./config.js\""
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/mocks.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PeerStatusZomeMock",
          "members": [
            {
              "kind": "method",
              "name": "ping",
              "parameters": [
                {
                  "name": "_agents",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "ZomeMock",
            "package": "@holochain-open-dev/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PeerStatusZomeMock",
          "declaration": {
            "name": "PeerStatusZomeMock",
            "module": "src/mocks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/peer-status-client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PeerStatusClient",
          "members": [
            {
              "kind": "method",
              "name": "ping",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "agentPubKeys",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                }
              ],
              "description": "Ping all given agents, expecting for their pong later"
            }
          ],
          "superclass": {
            "name": "ZomeClient",
            "package": "@holochain-open-dev/utils"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PeerStatusClient",
          "declaration": {
            "name": "PeerStatusClient",
            "module": "src/peer-status-client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/peer-status-store.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PeerStatusStore",
          "members": [
            {
              "kind": "field",
              "name": "config",
              "type": {
                "text": "PeerStatusConfig"
              },
              "default": "{ ...defaultConfig, ...config }"
            },
            {
              "kind": "field",
              "name": "agentsLastSeen",
              "default": "new LazyHoloHashMap((agent: AgentPubKey) =>\n    readable<number | undefined>(undefined, (set) => {\n      const interval = setInterval(\n        () => this.client.ping([agent]),\n        this.config.pingIntervalMs\n      );\n      const unsubscribe = this.client.onSignal((peerStatusSignal) => {\n        if (\n          peerStatusSignal.type === \"Pong\" &&\n          peerStatusSignal.from_agent.toString() === agent.toString()\n        ) {\n          set(Date.now());\n        }\n      });\n\n      return () => {\n        clearInterval(interval);\n        unsubscribe();\n      };\n    })\n  )"
            },
            {
              "kind": "field",
              "name": "agentsStatus"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PeerStatusStore",
          "declaration": {
            "name": "PeerStatusStore",
            "module": "src/peer-status-store.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "test/mocks/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getAppWebsocket"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getAppWebsocket",
          "declaration": {
            "name": "getAppWebsocket",
            "module": "test/mocks/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "test/mocks/status.mock.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "StatusMock",
          "members": [
            {
              "kind": "method",
              "name": "create_status",
              "parameters": [
                {
                  "name": "{ username }"
                },
                {
                  "name": "provenance"
                }
              ]
            },
            {
              "kind": "method",
              "name": "search_statuss",
              "parameters": [
                {
                  "name": "{ username_prefix }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_my_status",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "provenance"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get_agent_status",
              "parameters": [
                {
                  "name": "{ agent_address }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "findAgent",
              "parameters": [
                {
                  "name": "agent_address"
                }
              ]
            },
            {
              "kind": "field",
              "name": "agents",
              "type": {
                "text": "array"
              },
              "default": "[]"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StatusMock",
          "declaration": {
            "name": "StatusMock",
            "module": "test/mocks/status.mock.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/avatar-with-status.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AvatarWithStatus",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. The public key identifying the agent whose presence is going to be shown.",
              "attribute": "agentPubKey"
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. The public key identifying the agent whose presence is going to be shown.",
              "fieldName": "agentPubKey"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "avatar-with-status",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AvatarWithStatus",
          "declaration": {
            "name": "AvatarWithStatus",
            "module": "src/elements/avatar-with-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "avatar-with-status",
          "declaration": {
            "name": "AvatarWithStatus",
            "module": "src/elements/avatar-with-status.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/list-agents-by-status.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ListAgentsByStatus",
          "members": [
            {
              "kind": "field",
              "name": "agents",
              "type": {
                "text": "AgentPubKey[]"
              },
              "description": "REQUIRED. The public keys identifying the agents whose presence is going to be shown.",
              "attribute": "agents"
            },
            {
              "kind": "method",
              "name": "renderOnlineAgents",
              "parameters": [
                {
                  "name": "profiles",
                  "type": {
                    "text": "ReadonlyMap<AgentPubKey, Profile | undefined>"
                  }
                },
                {
                  "name": "agentPubKeys",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderOfflineAgents",
              "parameters": [
                {
                  "name": "profiles",
                  "type": {
                    "text": "ReadonlyMap<AgentPubKey, Profile | undefined>"
                  }
                },
                {
                  "name": "agentPubKeys",
                  "type": {
                    "text": "AgentPubKey[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderHeading"
            },
            {
              "kind": "method",
              "name": "renderAgents"
            }
          ],
          "attributes": [
            {
              "name": "agents",
              "type": {
                "text": "AgentPubKey[]"
              },
              "description": "REQUIRED. The public keys identifying the agents whose presence is going to be shown.",
              "fieldName": "agents"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "list-agents-by-status",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ListAgentsByStatus",
          "declaration": {
            "name": "ListAgentsByStatus",
            "module": "src/elements/list-agents-by-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "list-agents-by-status",
          "declaration": {
            "name": "ListAgentsByStatus",
            "module": "src/elements/list-agents-by-status.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/peer-status-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PeerStatusContext",
          "members": [
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "PeerStatusStore"
              },
              "attribute": "store"
            }
          ],
          "attributes": [
            {
              "name": "store",
              "type": {
                "text": "PeerStatusStore"
              },
              "fieldName": "store"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peer-status-context",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PeerStatusContext",
          "declaration": {
            "name": "PeerStatusContext",
            "module": "src/elements/peer-status-context.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peer-status-context",
          "declaration": {
            "name": "PeerStatusContext",
            "module": "src/elements/peer-status-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/elements/peer-status.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PeerStatus",
          "members": [
            {
              "kind": "field",
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. The public key identifying the agent whose presence is going to be shown.",
              "attribute": "agentPubKey"
            }
          ],
          "attributes": [
            {
              "name": "agentPubKey",
              "type": {
                "text": "AgentPubKey"
              },
              "description": "REQUIRED. The public key identifying the agent whose presence is going to be shown.",
              "fieldName": "agentPubKey"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "peer-status",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PeerStatus",
          "declaration": {
            "name": "PeerStatus",
            "module": "src/elements/peer-status.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "peer-status",
          "declaration": {
            "name": "PeerStatus",
            "module": "src/elements/peer-status.ts"
          }
        }
      ]
    }
  ]
}
